html.is-changing .transition-main {
  transition: opacity 250ms ease-in-out;
}

html.is-leaving .transition-main {
  transition: opacity 250ms ease-in-out;
}

html.is-animating .transition-main {
  opacity: 0;
}

.grid .card {
  transition: transform 250ms, background-color 150ms;
  transition-delay: calc(var(--index, 0) * 50ms), 0ms;
 
}



html.is-rendering .grid .card {
  transition-delay: calc((var(--count, 0) - var(--index, 0)) * 10ms), 0ms;
}

html.is-animating .grid .card {
  transform: scale(0.8);
}

h1 {
  transition: transform 300ms, opacity 300ms;
}

html.is-animating.is-leaving h1 {
  transform: translateY(2rem);
  opacity: 0;
}

html.is-animating.is-rendering h1 {
  transform: translateY(-2rem);
  opacity: 0;
}

html.is-animating.is-leaving h2 {
  transform: translateY(2rem);
  opacity: 0;
}

html.is-animating.is-rendering h2 {
  transform: translateY(-2rem);
  opacity: 0;
}


.detail-content {
  transition: transform 400ms;
}

.back-button, .home-button {
  transform: transform 300ms;
}

html.is-animating.is-leaving .detail-content {
  transform: translateY(3rem);
}

html.is-animating.is-rendering .detail-content {
  transform: translateY(3rem);
}

.detail-content>* {
  transition: opacity 300ms, transform 300ms;
  transition-delay: calc(0ms + (2 - var(--index, 0)) * 75ms);
  
}

html.is-animating .detail-content>* {
  opacity: 0;
  transform: translateY(calc((var(--index, 0) + 1) * 2em));
  transition-delay: 0ms;
}

#modal.is-changing {
  transition: opacity 250ms;
}

#modal.is-animating {
  opacity: 0;
}

/* Zoom-Effect for the detail when opening/closing the modal */
#modal.is-changing #detail {
  transition: transform 150ms;
  transform: scale(1);
}

#modal.to-open-modal.is-animating #detail,
#modal.to-close-modal.is-leaving #detail {
  transform: scale(0.95);
}


#detail.is-changing {
  transition: opacity 200ms, transform 200ms;
}

#detail.to-next {
  --direction: 1;
}

#detail.to-previous {
  --direction: -1;
}

#detail.is-animating {
  opacity: 0;
  transform: translateX(calc(40px * var(--direction)));
}

#detail.is-leaving {
  transform: translateX(calc(40px * var(--direction) * -1));
}


